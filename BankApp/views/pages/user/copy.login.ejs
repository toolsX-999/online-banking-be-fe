<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Bank Login</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <link rel="stylesheet" href="/css/userlogin.css">
  <link rel="icon" type="image/svg+xml" href="/images/bank-header-logo.svg">

</head>

<body>
  <button class="theme-toggle" onclick="toggleTheme()"><i class="fas fa-moon"></i></button>

  <div class="login-box">
    <h5 class="login-title d-flex align-items-center justify-content-center">
      <img src="/images/bank-logo.svg" alt="Logo" style="height: 50px; width: 90px;" />
      <span class="mt-1">Account Login</span>
    </h5>
    <!-- <h4 class="login-title">Bank Login</h4> -->

    <!-- Alert success/failure div -->
    <div id="formAlert" class="alert alert-dismissible fade d-none p-3" role="alert" style="background-color: aqua;">
      <span id="alertMessage"></span>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>

    <form id="loginForm" action="/user/login" method="POST" novalidate>
      <div class="mb-3">
        <label for="email">Email</label>
        <div class="input-group">
          <span class="input-group-text"><i class="fas fa-user"></i></span>
          <input type="email" class="form-control" id="email" name="email" placeholder="Enter email" required>
        </div>
        <div class="invalid-feedback">Please enter your email.</div>
      </div>

      <div class="mb-3">
        <label for="password">Password</label>
        <div class="input-group">
          <span class="input-group-text"><i class="fas fa-lock"></i></span>
          <input type="password" class="form-control" id="password" name="password" placeholder="Enter password"
            required>
          <span class="input-group-text toggle-password"><i class="fas fa-eye-slash" id="togglePasswordIcon"></i></span>
        </div>
        <div class="invalid-feedback">Please enter your password.</div>
      </div>

      <div class="d-flex justify-content-between align-items-center mb-3">
        <div class="form-check">
          <input type="checkbox" class="form-check-input" id="rememberMe">
          <label class="form-check-label" for="rememberMe">Remember me</label>
        </div>
        <a href="#" class="forgot-link text-primary">Forgot password?</a>
      </div>
      <button id="submit-button" class="btn btn-primary w-100" type="submit">Login</button>
    </form>
    <div id="spinner" style="display:none; text-align: center; padding: 8px; margin-top: 4px;">ðŸ”„ Logging in...</div>
  </div>

  <!-- Toast Notification -->
  <div class="toast-container">
    <div id="loginToast" class="toast align-items-center text-white bg-success border-0" role="alert">
      <div class="d-flex">
        <div class="toast-body">Login successful!</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    const togglePassword = document.querySelector(".toggle-password");
    const passwordInput = document.getElementById("password");
    const icon = document.getElementById("togglePasswordIcon");
    const alertBox = document.getElementById("formAlert");
    const alertMessage = document.getElementById("alertMessage");
    const form = document.getElementById("loginForm");
    const toast = new bootstrap.Toast(document.getElementById("loginToast"));

    // Toggle password
    togglePassword.addEventListener("click", () => {
      const type = passwordInput.type === "password" ? "text" : "password";
      passwordInput.type = type;
      icon.classList.toggle("fa-eye");
      icon.classList.toggle("fa-eye-slash");
    });

    form.addEventListener("submit", async function (e) {
      e.preventDefault();

      if (!form.checkValidity()) {
        e.stopPropagation();
        form.classList.add("was-validated");
        return;
      }

      const formData = new FormData(form);
      const payload = Object.fromEntries(formData.entries());

      try {
        const response = await fetch(form.action, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload),
        });

        const result = await response.json();

        alertBox.classList.remove('d-none', 'alert-danger', 'alert-success');
        alertBox.classList.add('show', response.ok ? 'alert-success' : 'alert-danger');
        alertMessage.textContent = result.message || (response.ok ? 'Success' : 'Error occurred');

        if (response.ok && result.redirectTo) {
          document.getElementById("submit-button").disabled = true;
          document.getElementById("email").disabled = true;
          document.getElementById("password").disabled = true;
          document.getElementById("spinner").style.display = "block";

          setTimeout(() => {
            window.location.href = result.redirectTo;
          }, 5000);
        }

        // Only show alert if credentials are invalid (i.e., response not OK)
        if (!response.ok && !result.redirectTo) {
          console.log("in !response.ok (invalid request)");

          // Ensure alert is visible and styled for error
          alertBox.classList.remove('d-none', 'alert-success');
          alertBox.classList.add('alert-danger', 'show');

          // Set alert message
          alertMessage.textContent = result.message || 'Invalid credentials.';

          // Remove validation styling so it doesn't block next submit
          form.classList.remove("was-validated");
        } 
        else {
          // âœ… Hide alert completely on valid creds
          alertBox.classList.remove('alert-danger', 'alert-success', 'show');
          alertBox.classList.add('d-none');
        }
      } catch (err) {
        console.error("Error:", err.message);
        alertBox.classList.remove('d-none', 'alert-success');
        alertBox.classList.add('alert-danger', 'show');
        alertMessage.textContent = 'Network or server error.';
      }
    });

    // Dark mode toggle
    function toggleTheme() {
      document.documentElement.classList.toggle("dark-mode");
    }
  </script>
</body>

</html>